<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="Exceptions/Exceptions.php" hash="23828529817ad0310374a780e33b2485" package="PGraph">
    <docblock line="3">
      <description>A collection of Exception classes.</description>
      <long-description>&lt;p&gt;PHP version 5.3&lt;/p&gt;

&lt;p&gt;LICENSE: This source file is subject to version 3.01 of the PHP license
that is available through the world-wide-web at the following URI:
http://www.php.net/license/3_01.txt.  If you did not receive a copy of
the PHP License and are unable to obtain it through the web, please
send a note to license@php.net so we can mail you a copy immediately.&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="Exceptions"/>
      <tag line="3" name="package" description="PGraph"/>
      <tag line="3" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
      <tag line="3" name="copyright" description="2013 Vilius Zaikauskas"/>
      <tag line="3" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
      <tag line="3" name="version" description="GIT: $Id$"/>
      <tag line="3" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
      <tag line="3" name="since" description="File available since Release 1.0"/>
    </docblock>
    <include line="23" type="Require Once" package="Default">
      <name>PGraphException.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="37" package="PGraph">
      <extends>\PGraphException</extends>
      <name>NoVertexException</name>
      <full_name>\NoVertexException</full_name>
      <docblock line="25">
        <description>Exception thrown if a vertex doesn't exist.</description>
        <long-description></long-description>
        <tag line="25" name="category" description="NoVertexException"/>
        <tag line="25" name="package" description="PGraph"/>
        <tag line="25" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="25" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="25" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="25" name="version" description="Release: @package_version@"/>
        <tag line="25" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="25" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="40">
          <description>Constructor to create the NoVertexException.</description>
          <long-description></long-description>
          <tag line="40" name="param" description="The arguments to be embedded into&#10;                   the Exception message." type="mixed" variable="$args">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="66" package="PGraph">
      <extends>\PGraphException</extends>
      <name>NoEdgeException</name>
      <full_name>\NoEdgeException</full_name>
      <docblock line="53">
        <description>Exception thrown if an edge between
certain vertices doesn't exist.</description>
        <long-description></long-description>
        <tag line="53" name="category" description="NoEdgeException"/>
        <tag line="53" name="package" description="PGraph"/>
        <tag line="53" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="53" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="53" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="53" name="version" description="Release: @package_version@"/>
        <tag line="53" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="53" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="69">
          <description>Constructor to create the NoEdgeException.</description>
          <long-description></long-description>
          <tag line="69" name="param" description="The arguments to be embedded into&#10;                   the Exception message." type="mixed" variable="$args">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="95" package="PGraph">
      <extends>\PGraphException</extends>
      <name>EdgeExistsException</name>
      <full_name>\EdgeExistsException</full_name>
      <docblock line="82">
        <description>Exception thrown if an edge between two vertices
exists.</description>
        <long-description></long-description>
        <tag line="82" name="category" description="EdgeExistsException"/>
        <tag line="82" name="package" description="PGraph"/>
        <tag line="82" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="82" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="82" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="82" name="version" description="Release: @package_version@"/>
        <tag line="82" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="82" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="98">
          <description>Constructor to create the EdgeExistsException.</description>
          <long-description></long-description>
          <tag line="98" name="param" description="The arguments to be embedded into&#10;                   the Exception message." type="mixed" variable="$args">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="123" package="PGraph">
      <extends>\PGraphException</extends>
      <name>VertexExistsException</name>
      <full_name>\VertexExistsException</full_name>
      <docblock line="111">
        <description>Exception thrown if a vertex exists.</description>
        <long-description></long-description>
        <tag line="111" name="category" description="VertexExistsException"/>
        <tag line="111" name="package" description="PGraph"/>
        <tag line="111" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="111" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="111" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="111" name="version" description="Release: @package_version@"/>
        <tag line="111" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="111" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="125">
          <description>Constructor to create the VertexExistsException.</description>
          <long-description></long-description>
          <tag line="125" name="param" description="The arguments to be embedded into&#10;                   the Exception message." type="mixed" variable="$args">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="150" package="PGraph">
      <extends>\PGraphException</extends>
      <name>NoPathException</name>
      <full_name>\NoPathException</full_name>
      <docblock line="137">
        <description>Exception thrown if there is no path
betwee two vertices.</description>
        <long-description></long-description>
        <tag line="137" name="category" description="NoPathException"/>
        <tag line="137" name="package" description="PGraph"/>
        <tag line="137" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="137" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="137" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="137" name="version" description="Release: @package_version@"/>
        <tag line="137" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="137" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="159" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="153">
          <description>Constructor to create the NoPathException.</description>
          <long-description></long-description>
          <tag line="153" name="param" description="The arguments to be embedded into&#10;                   the Exception message." type="mixed" variable="$args">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="178" package="PGraph">
      <extends>\PGraphException</extends>
      <name>InvalidTypeException</name>
      <full_name>\InvalidTypeException</full_name>
      <docblock line="165">
        <description>Exception thrown if the parameter passed has an invalid
type.</description>
        <long-description></long-description>
        <tag line="165" name="category" description="InvalidTypeException"/>
        <tag line="165" name="package" description="PGraph"/>
        <tag line="165" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="165" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="165" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="165" name="version" description="Release: @package_version@"/>
        <tag line="165" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="165" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="180">
          <description>Constructor to create the InvalidTypeException.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="202" package="PGraph">
      <extends>\PGraphException</extends>
      <name>NegativeCycleException</name>
      <full_name>\NegativeCycleException</full_name>
      <docblock line="190">
        <description>Exception thrown if a graph contains a negative cycle.</description>
        <long-description></long-description>
        <tag line="190" name="category" description="NegativeCycleException"/>
        <tag line="190" name="package" description="PGraph"/>
        <tag line="190" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="190" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="190" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="190" name="version" description="Release: @package_version@"/>
        <tag line="190" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="190" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="207" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="204">
          <description>Constructor to create the NegativeCycleException.</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Exceptions/PGraphException.php" hash="0625a5faf81161d6e5752618ee494965" package="PGraph">
    <docblock line="2">
      <description>The Generic PGraph Exception class.</description>
      <long-description>&lt;p&gt;All valid Exceptions will extend this class.&lt;/p&gt;

&lt;p&gt;PHP version 5.3&lt;/p&gt;

&lt;p&gt;LICENSE: This source file is subject to version 3.01 of the PHP license
that is available through the world-wide-web at the following URI:
http://www.php.net/license/3_01.txt.  If you did not receive a copy of
the PHP License and are unable to obtain it through the web, please
send a note to license@php.net so we can mail you a copy immediately.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="Exceptions"/>
      <tag line="2" name="package" description="PGraph"/>
      <tag line="2" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
      <tag line="2" name="copyright" description="2013 Vilius Zaikauskas"/>
      <tag line="2" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
      <tag line="2" name="version" description="GIT: $Id$"/>
      <tag line="2" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
      <tag line="2" name="since" description="File available since Release 1.0"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="39" package="PGraph">
      <extends>\Exception</extends>
      <name>PGraphException</name>
      <full_name>\PGraphException</full_name>
      <docblock line="26">
        <description>The main Exception class that is intended for
being the benchmark for all Exceptions.</description>
        <long-description></long-description>
        <tag line="26" name="category" description="PGraphException"/>
        <tag line="26" name="package" description="PGraph"/>
        <tag line="26" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="26" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="26" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="26" name="version" description="Release: @package_version@"/>
        <tag line="26" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="26" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="45" namespace="global" package="Default">
        <name>$_messages</name>
        <default>null</default>
        <docblock line="41">
          <description></description>
          <long-description></long-description>
          <tag line="41" name="var" description="Exception messages." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="47">
          <description>PGraphException Constructor.</description>
          <long-description></long-description>
          <tag line="47" name="param" description="Values to be embedded into&#10;                    the messages." type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="47" name="param" description="The Exception message index." type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$args</name>
          <default></default>
          <type/>
        </argument>
        <argument line="54">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="77" package="PGraph">
        <name>_initMessages</name>
        <full_name>_initMessages</full_name>
        <docblock line="71">
          <description>Initialize the $_messages array if
it hasn't been done so.</description>
          <long-description></long-description>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="PGraph.php" hash="e21ba36866a5845914fe389336ff3e1a" package="PGraph">
    <docblock line="3">
      <description>The main PGraph file.</description>
      <long-description>&lt;p&gt;This is where all the functions used
by the users are.&lt;/p&gt;

&lt;p&gt;PHP version 5.3&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="Main"/>
      <tag line="3" name="package" description="PGraph"/>
      <tag line="3" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
      <tag line="3" name="copyright" description="2013 Vilius Zaikauskas"/>
      <tag line="3" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
      <tag line="3" name="version" description="GIT: $package_id$"/>
      <tag line="3" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
      <tag line="3" name="since" description="File available since Release 1.0"/>
    </docblock>
    <include line="20" type="Require Once" package="Default">
      <name>PEAR.php</name>
    </include>
    <include line="23" type="Require Once" package="Default">
      <name>Constants.php</name>
    </include>
    <include line="24" type="Require Once" package="Default">
      <name>Exceptions/Exceptions.php</name>
    </include>
    <include line="25" type="Require Once" package="Default">
      <name>PGraphVertex.php</name>
    </include>
    <include line="26" type="Require Once" package="Default">
      <name>PGraphLinkedList.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="41" package="PGraph">
      <extends/>
      <implements>\Iterator</implements>
      <implements>\ArrayAccess</implements>
      <implements>\Countable</implements>
      <name>PGraph</name>
      <full_name>\PGraph</full_name>
      <docblock line="28">
        <description>The main PGraph class that is intended for
user usage.</description>
        <long-description></long-description>
        <tag line="28" name="category" description="PGraph"/>
        <tag line="28" name="package" description="PGraph"/>
        <tag line="28" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="28" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="28" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="28" name="version" description="Release: @package_version@"/>
        <tag line="28" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="28" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="48" namespace="global" package="Default">
        <name>$_vertices</name>
        <default></default>
        <docblock line="44">
          <description></description>
          <long-description></long-description>
          <tag line="44" name="var" description="A vertex list." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="55" namespace="global" package="Default">
        <name>$_directed</name>
        <default></default>
        <docblock line="50">
          <description></description>
          <long-description></long-description>
          <tag line="50" name="var" description="This graph is either directed or undirected." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$_negativeWeights</name>
        <default></default>
        <docblock line="57">
          <description></description>
          <long-description></long-description>
          <tag line="57" name="var" description="The number of negative weight edges." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="64">
          <description>A constructor to create the PGraph.</description>
          <long-description></long-description>
          <tag line="64" name="param" description="TRUE if we want to the graph to be directed.&#10;                         FALSE if we want it to be undirected.&#10;                         (Default: TRUE)" type="boolean" variable="$directed">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$directed</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="PGraph">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="78">
          <description>Gives the number of vertices.</description>
          <long-description></long-description>
          <tag line="78" name="return" description="The number of vertices." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="PGraph">
        <name>current</name>
        <full_name>current</full_name>
        <docblock line="88">
          <description>Gets the value of the currently pointed vertex.</description>
          <long-description></long-description>
          <tag line="88" name="return" description="The value that is in the&#10;              currently pointed vertex." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="PGraph">
        <name>key</name>
        <full_name>key</full_name>
        <docblock line="100">
          <description>The index of the current vertex element.</description>
          <long-description></long-description>
          <tag line="100" name="return" description="The index of the currently pointed&#10;              vertex." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="PGraph">
        <name>next</name>
        <full_name>next</full_name>
        <docblock line="111">
          <description>Move the pointer to the next vertex.</description>
          <long-description></long-description>
          <tag line="111" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="PGraph">
        <name>rewind</name>
        <full_name>rewind</full_name>
        <docblock line="121">
          <description>Move the pointer to an array of vertices
to the beginning.</description>
          <long-description></long-description>
          <tag line="121" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="PGraph">
        <name>valid</name>
        <full_name>valid</full_name>
        <docblock line="132">
          <description>Check if the array pointer is pointing to a valid
array slot.</description>
          <long-description></long-description>
          <tag line="132" name="return" description="TRUE if the current pointer is&#10;                pointing the valid slot.&#10;                FALSE, otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="153" package="PGraph">
        <name>offsetExists</name>
        <full_name>offsetExists</full_name>
        <docblock line="145">
          <description>Check if the vertex with a given index exists.</description>
          <long-description></long-description>
          <tag line="145" name="param" description="The index of the vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="145" name="return" description="TRUE if the vertex with a given index&#10;                exists. FALSE, otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="PGraph">
        <name>offsetGet</name>
        <full_name>offsetGet</full_name>
        <docblock line="158">
          <description>Get the value of the vertex.</description>
          <long-description></long-description>
          <tag line="158" name="param" description="The index we are accessing." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="158" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="158" name="return" description="The data value. NULL, if the there is no value&#10;                basedon the given index." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="194" package="PGraph">
        <name>offsetSet</name>
        <full_name>offsetSet</full_name>
        <docblock line="186">
          <description>Add the vertex to the vertext array.</description>
          <long-description></long-description>
          <tag line="186" name="param" description="The index of the vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="186" name="param" description="The data contained in the vertex." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="186" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="194">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="194">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="208" package="PGraph">
        <name>offsetUnset</name>
        <full_name>offsetUnset</full_name>
        <docblock line="199">
          <description>Unset the array element.</description>
          <long-description></long-description>
          <tag line="199" name="param" description="the index of an element to unset." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="199" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="199" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="249" package="PGraph">
        <name>addEdge</name>
        <full_name>addEdge</full_name>
        <docblock line="233">
          <description>Add an edge between two vertices (if it doesn't exist).</description>
          <long-description></long-description>
          <tag line="233" name="param" description="The index of the first vertex.&#10;                       If the graph is undirected, the edge&#10;                       GOES FROM this vertex." type="mixed" variable="$srcIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="233" name="param" description="The index of the second vertex.&#10;                       If the graph is directed, the edge&#10;                       GOES INTO this vertex." type="mixed" variable="$dstIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="233" name="param" description="The weight of the edge (Default: 0)." type="float" variable="$weight">
            <type by_reference="false">float</type>
          </tag>
          <tag line="233" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="233" name="throws" description="" type="\EdgeExistsException">
            <type by_reference="false">\EdgeExistsException</type>
          </tag>
          <tag line="233" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="249">
          <name>$srcIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$dstIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="249">
          <name>$weight</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="308" package="PGraph">
        <name>setWeight</name>
        <full_name>setWeight</full_name>
        <docblock line="293">
          <description>Provided the given vertices and the edge between them
exists, change the weight of the edge.</description>
          <long-description></long-description>
          <tag line="293" name="param" description="The index of a vertex from which the edge&#10;                        GOES FROM." type="mixed" variable="$srcIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="293" name="param" description="The index of a vertex to which the edge&#10;                        GOES TO." type="mixed" variable="$dstIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="293" name="param" description="The new weight of the edge." type="float" variable="$newWeight">
            <type by_reference="false">float</type>
          </tag>
          <tag line="293" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="293" name="throws" description="" type="\NoEdgeException">
            <type by_reference="false">\NoEdgeException</type>
          </tag>
          <tag line="293" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="308">
          <name>$srcIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="308">
          <name>$dstIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="308">
          <name>$newWeight</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="355" package="PGraph">
        <name>setVertex</name>
        <full_name>setVertex</full_name>
        <docblock line="345">
          <description>Change the value of the already existing vertex.</description>
          <long-description></long-description>
          <tag line="345" name="param" description="The index of the vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="345" name="param" description="The new value that the vertex should contain." type="mixed" variable="$newValue">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="345" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="345" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="355">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="355">
          <name>$newValue</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="373" package="PGraph">
        <name>removeEdge</name>
        <full_name>removeEdge</full_name>
        <docblock line="365">
          <description>Remove the edge (if exists).</description>
          <long-description></long-description>
          <tag line="365" name="param" description="The index from which the edge GOES FROM." type="mixed" variable="$srcIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="365" name="param" description="The index to which the edge GOES TO." type="mixed" variable="$dstIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="365" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="373">
          <name>$srcIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="373">
          <name>$dstIndex</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="426" package="PGraph">
        <name>addVertex</name>
        <full_name>addVertex</full_name>
        <docblock line="416">
          <description>Add a new vertex into the graph.</description>
          <long-description></long-description>
          <tag line="416" name="param" description="The index of the next vertex" type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="416" name="param" description="The value that the vertex will contain." type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="416" name="throws" description="" type="\VertexExistsException">
            <type by_reference="false">\VertexExistsException</type>
          </tag>
          <tag line="416" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="426">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="426">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="445" package="PGraph">
        <name>removeVertex</name>
        <full_name>removeVertex</full_name>
        <docblock line="436">
          <description>Remove the vertex if it exists.</description>
          <long-description></long-description>
          <tag line="436" name="param" description="The index of the vertex we want to remove." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="436" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="436" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="445">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="464" package="PGraph">
        <name>getVertex</name>
        <full_name>getVertex</full_name>
        <docblock line="455">
          <description>Get the value of the vertex.</description>
          <long-description></long-description>
          <tag line="455" name="param" description="The index of the vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="455" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="455" name="return" description="The value of the vertex." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="464">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="481" package="PGraph">
        <name>getWeight</name>
        <full_name>getWeight</full_name>
        <docblock line="469">
          <description>Returns the weight of the edge.</description>
          <long-description></long-description>
          <tag line="469" name="param" description="The vertex connected via an edge." type="mixed" variable="$srcIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="469" name="param" description="The vertex connected via an edge." type="mixed" variable="$dstIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="469" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="469" name="throws" description="" type="\NoEdgeException">
            <type by_reference="false">\NoEdgeException</type>
          </tag>
          <tag line="469" name="return" description="The weight of the edge.&#10;              FALSE if the edge doesn't exist." type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="481">
          <name>$srcIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="481">
          <name>$dstIndex</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="524" package="PGraph">
        <name>shortestPath</name>
        <full_name>shortestPath</full_name>
        <docblock line="509">
          <description>Find the shortest path between two vertices.</description>
          <long-description></long-description>
          <tag line="509" name="param" description="The start vertex." type="mixed" variable="$srcIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="509" name="param" description="The destination vertex." type="mixed" variable="$dstIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="509" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="509" name="throws" description="" type="\NoPathException">
            <type by_reference="false">\NoPathException</type>
          </tag>
          <tag line="509" name="throws" description="" type="\NegativeCycleException">
            <type by_reference="false">\NegativeCycleException</type>
          </tag>
          <tag line="509" name="return" description="The path between the source and the&#10;              destination. FALSE if there is no path&#10;              or there is a negative-weight cycle." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="524">
          <name>$srcIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="524">
          <name>$dstIndex</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="556" package="PGraph">
        <name>depthFirstSearch</name>
        <full_name>depthFirstSearch</full_name>
        <docblock line="546">
          <description>Perform a Depth First Search starting from the given
vertex.</description>
          <long-description></long-description>
          <tag line="546" name="param" description="The index of the starting vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="546" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="546" name="return" description="All the vertices traversed." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="556">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="572" package="PGraph">
        <name>breadthFirstSearch</name>
        <full_name>breadthFirstSearch</full_name>
        <docblock line="562">
          <description>Perform a Breadth First Search starting from the given
vertex.</description>
          <long-description></long-description>
          <tag line="562" name="param" description="The index of the starting vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="562" name="throws" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="562" name="return" description="All the vertices traversed." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="572">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="587" package="PGraph">
        <name>getNeighbors</name>
        <full_name>getNeighbors</full_name>
        <docblock line="578">
          <description>Get all the neighboring vertices of the given vertex.</description>
          <long-description></long-description>
          <tag line="578" name="param" description="An index of the vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="578" name="throw" description="" type="\NoVertexException">
            <type by_reference="false">\NoVertexException</type>
          </tag>
          <tag line="578" name="return" description="All the neighbors of the given vertex." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="587">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="610" package="PGraph">
        <name>_vertexExists</name>
        <full_name>_vertexExists</full_name>
        <docblock line="601">
          <description>Check if the vertex with a given index exists.</description>
          <long-description></long-description>
          <tag line="601" name="param" description="The index of the vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="601" name="return" description="TRUE if the vertex exists.&#10;                FALSE otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="610">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="626" package="PGraph">
        <name>_edgeExists</name>
        <full_name>_edgeExists</full_name>
        <docblock line="615">
          <description>Check if there is an edge between two vertices.</description>
          <long-description></long-description>
          <tag line="615" name="param" description="The vertex from which the edge&#10;                       GOES FROM." type="mixed" variable="$srcIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="615" name="param" description="The vertex to which the edge&#10;                       GOES TO." type="mixed" variable="$dstIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="615" name="return" description="TRUE if the edge exists.&#10;                FALSE otherwise." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="626">
          <name>$srcIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="626">
          <name>$dstIndex</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="652" package="PGraph">
        <name>_traverseGraph</name>
        <full_name>_traverseGraph</full_name>
        <docblock line="637">
          <description>A helper function used to perform either Depth First Search
or Breadth First Search.</description>
          <long-description></long-description>
          <tag line="637" name="param" description="The index of the starting vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="637" name="param" description="Considering the usage of this&#10;                                   function, it'll be either a&#10;                                   Stack or Queue, depending&#10;                                   on whether it's a&#10;                                   Depth First Search or&#10;                                   Breadth First Search." type="\SplDoublyLinkedList" variable="$list">
            <type by_reference="false">\SplDoublyLinkedList</type>
          </tag>
          <tag line="637" name="return" description="The list of vertices traversed. FALSE, if the vertex&#10;                doesn't exist." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="652">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="652">
          <name>$list</name>
          <default></default>
          <type>\SplDoublyLinkedList</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="700" package="PGraph">
        <name>_addToList</name>
        <full_name>_addToList</full_name>
        <docblock line="690">
          <description>Add the value into the linked list.</description>
          <long-description></long-description>
          <tag line="690" name="param" description="The index of a vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="690" name="param" description="&amp;$list Considering the usage,&#10;                                  this will either be a Stack&#10;                                  or a Queue." type="\SplDoublyLinkedList" variable="$list">
            <type by_reference="false">\SplDoublyLinkedList</type>
          </tag>
          <tag line="690" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="700">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="700">
          <name>$list</name>
          <default></default>
          <type>\SplDoublyLinkedList</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="721" package="PGraph">
        <name>_removeFromList</name>
        <full_name>_removeFromList</full_name>
        <docblock line="712">
          <description>Remove an element from the Stack or Queue.</description>
          <long-description></long-description>
          <tag line="712" name="param" description="&amp;$list Considering the usage, this will&#10;                                  either be a Stack or a Queue." type="\SplDoublyLinkedList" variable="$list">
            <type by_reference="false">\SplDoublyLinkedList</type>
          </tag>
          <tag line="712" name="return" description="The index of a vertex that we removed from the list.&#10;              NULL, if the type of the list is not recognized." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="721">
          <name>$list</name>
          <default></default>
          <type>\SplDoublyLinkedList</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="759" package="PGraph">
        <name>_dijkstra</name>
        <full_name>_dijkstra</full_name>
        <docblock line="745">
          <description>If there are no negative weight edges,
use Dijkstra's algorithm to find the
shortest path between two vertices.</description>
          <long-description>&lt;p&gt;SOURCE: wikipedia.org&lt;/p&gt;</long-description>
          <tag line="745" name="param" description="The starting vertex." type="mixed" variable="$srcIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="745" name="param" description="The destination vertex." type="mixed" variable="$dstIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="745" name="throws" description="" type="\NoPathException">
            <type by_reference="false">\NoPathException</type>
          </tag>
          <tag line="745" name="return" description="The path between two vertices." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="759">
          <name>$srcIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="759">
          <name>$dstIndex</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="869" package="PGraph">
        <name>_bellmanFord</name>
        <full_name>_bellmanFord</full_name>
        <docblock line="853">
          <description>If there is at least one negative weight edge,
this is used to find the shortest path between
two vertices.</description>
          <long-description></long-description>
          <tag line="853" name="param" description="The starting vertex." type="mixed" variable="$srcIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="853" name="param" description="The destination vertex." type="mixed" variable="$dstIndex">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="853" name="throws" description="" type="\NoPathException">
            <type by_reference="false">\NoPathException</type>
          </tag>
          <tag line="853" name="throws" description="" type="\NegativeCycleException">
            <type by_reference="false">\NegativeCycleException</type>
          </tag>
          <tag line="853" name="return" description="The path between two vertices.&#10;              FALSE if there is no path or&#10;              a negative cycle has been&#10;              detected." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="869">
          <name>$srcIndex</name>
          <default></default>
          <type/>
        </argument>
        <argument line="869">
          <name>$dstIndex</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="PGraphVertex.php" hash="5bc5f1924a05fa173a73c64934593047" package="PGraph">
    <docblock line="3">
      <description>This is where we define the graph vertex file.</description>
      <long-description>&lt;p&gt;ALL CLASSES
AND FUNCTIONS WRITTEN ARE HERE ARE NOT TO BE INSTANTIATED
BY THE USER.&lt;/p&gt;

&lt;p&gt;PHP version 5.3&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="Graph_Vertex"/>
      <tag line="3" name="package" description="PGraph"/>
      <tag line="3" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
      <tag line="3" name="copyright" description="2013 Vilius Zaikauskas"/>
      <tag line="3" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
      <tag line="3" name="version" description="GIT: $Id$"/>
      <tag line="3" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
      <tag line="3" name="since" description="File available since Release 1.0"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="36" package="PGraph">
      <extends/>
      <name>PGraphVertex</name>
      <full_name>\PGraphVertex</full_name>
      <docblock line="23">
        <description>The main PGraph class that is intended for
user usage.</description>
        <long-description></long-description>
        <tag line="23" name="category" description="PGraphVertex"/>
        <tag line="23" name="package" description="PGraph"/>
        <tag line="23" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="23" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="23" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="23" name="version" description="Release: @package_version@"/>
        <tag line="23" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="23" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="43" namespace="global" package="Default">
        <name>$_data</name>
        <default></default>
        <docblock line="39">
          <description></description>
          <long-description></long-description>
          <tag line="39" name="var" description="The data contained in the vertex." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="global" package="Default">
        <name>$_neighbors</name>
        <default></default>
        <docblock line="45">
          <description></description>
          <long-description></long-description>
          <tag line="45" name="var" description="The neighboring vertices of the current vertex." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="global" package="Default">
        <name>$_weights</name>
        <default></default>
        <docblock line="51">
          <description></description>
          <long-description></long-description>
          <tag line="51" name="var" description="Edge weights of the edges going to the associated neighbor." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="PGraph">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="58">
          <description>The constructor used to create the PGraphVertex object.</description>
          <long-description></long-description>
          <tag line="58" name="param" description="- the data that is to be held by this vertex." type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="PGraph">
        <name>addNeighbor</name>
        <full_name>addNeighbor</full_name>
        <docblock line="70">
          <description>Add an edge going into the given vertex.</description>
          <long-description></long-description>
          <tag line="70" name="param" description="the index of the vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="70" name="param" description="the reference to the vertex." type="\PGraphVertex" variable="$vertex">
            <type by_reference="false">\PGraphVertex</type>
          </tag>
          <tag line="70" name="param" description="the weight of the edge." type="float" variable="$weight">
            <type by_reference="false">float</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$vertex</name>
          <default></default>
          <type>\PGraphVertex</type>
        </argument>
        <argument line="79">
          <name>$weight</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="PGraph">
        <name>removeNeighbor</name>
        <full_name>removeNeighbor</full_name>
        <docblock line="85">
          <description>Remove the edge connecting this vertex
and the other vertex.</description>
          <long-description></long-description>
          <tag line="85" name="param" description="the index of the vertex&#10;                    to remove." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="PGraph">
        <name>getWeight</name>
        <full_name>getWeight</full_name>
        <docblock line="102">
          <description>Get the weight of the neighbor.</description>
          <long-description></long-description>
          <tag line="102" name="param" description="index of the neighbor vertex." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="102" name="return" description="the weight of the specified&#10;              vertex index. FALSE if the vertex&#10;              doesn't exist." type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="PGraph">
        <name>getData</name>
        <full_name>getData</full_name>
        <docblock line="120">
          <description>Return the data that is contained
in this vertex.</description>
          <long-description></long-description>
          <tag line="120" name="return" description="the data contained in this&#10;              vertex." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="PGraph">
        <name>getNeighbors</name>
        <full_name>getNeighbors</full_name>
        <docblock line="132">
          <description>Get the list of neighboring vertices.</description>
          <long-description></long-description>
          <tag line="132" name="return" description="The list of neighboring&#10;              vertices." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="PGraph">
        <name>getWeights</name>
        <full_name>getWeights</full_name>
        <docblock line="143">
          <description>Get the edge weights array.</description>
          <long-description></long-description>
          <tag line="143" name="return" description="- An array of edge weights." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="PGraph">
        <name>setWeight</name>
        <full_name>setWeight</full_name>
        <docblock line="153">
          <description>Set the weight of an edge
connecting to the other vertex.</description>
          <long-description></long-description>
          <tag line="153" name="param" description="The vertex index to which&#10;                        this edge connects." type="mixed" variable="$index">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="153" name="param" description="The new edge weight." type="float" variable="$newWeight">
            <type by_reference="false">float</type>
          </tag>
          <tag line="153" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$index</name>
          <default></default>
          <type/>
        </argument>
        <argument line="163">
          <name>$newWeight</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="PGraphLinkedList.php" hash="3050e8b1422ec4541a8398571ece0b3c" package="PGraph">
    <docblock line="3">
      <description>The extension of SplDoublyLinkedList used to simulate a queue used
in Dijkstra's Algorithm.</description>
      <long-description>&lt;p&gt;Even though the Fibonacci Heap would be
the best choice for a queue, SPL didn't have one and implementation
would've taken much longer.&lt;/p&gt;

&lt;p&gt;PHP version 5&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="Linked_List"/>
      <tag line="3" name="package" description="PGraph"/>
      <tag line="3" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
      <tag line="3" name="copyright" description="2013 Vilius Zaikauskas"/>
      <tag line="3" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
      <tag line="3" name="version" description="GIT: $package_id$"/>
      <tag line="3" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
      <tag line="3" name="since" description="File available since Release 1.0"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="33" package="PGraph">
      <extends>\SplDoublyLinkedList</extends>
      <name>PGraphLinkedList</name>
      <full_name>\PGraphLinkedList</full_name>
      <docblock line="21">
        <description>Extension of the SPLDoublyLinkedList class.</description>
        <long-description></long-description>
        <tag line="21" name="category" description="PGGraphLinkedList"/>
        <tag line="21" name="package" description="PGraph"/>
        <tag line="21" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
        <tag line="21" name="copyright" description="2013 Vilius Zaikauskas"/>
        <tag line="21" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
        <tag line="21" name="version" description="Release: @package_version@"/>
        <tag line="21" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
        <tag line="21" name="since" description="Class available since Release 1.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="PGraph">
        <name>popClosest</name>
        <full_name>popClosest</full_name>
        <docblock line="36">
          <description>Removes the vertex with the smallest
distance value and returns it.</description>
          <long-description></long-description>
          <tag line="36" name="param" description="The distance values&#10;                        of vertices." type="array" variable="$distances">
            <type by_reference="false">array</type>
          </tag>
          <tag line="36" name="return" description="Index of the vertex with the smallest&#10;              distance value. NULL if the distances&#10;              array is empty." type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$distances</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Constants.php" hash="d9100d80cb0f48a592df5b11cc37b47b" package="PGraph">
    <docblock line="3">
      <description>All the constants are defined here.</description>
      <long-description>&lt;p&gt;PHP version 5&lt;/p&gt;</long-description>
      <tag line="3" name="category" description="Constants"/>
      <tag line="3" name="package" description="PGraph"/>
      <tag line="3" name="author" description="Vilius Zaikauskas &lt;zaikaus1@gmail.com&gt;"/>
      <tag line="3" name="copyright" description="2013 Vilius Zaikauskas"/>
      <tag line="3" name="license" description="http://vzaikauskas.com/licenses/MIT.txt MIT"/>
      <tag line="3" name="version" description="GIT: $package_id$"/>
      <tag line="3" name="link" description="http://pear.php.net/package/PGraph" link="http://pear.php.net/package/PGraph"/>
      <tag line="3" name="since" description="File available since Release 1.0"/>
    </docblock>
    <constant namespace="global" line="19" package="PGraph">
      <name>DELIMITER</name>
      <full_name>\DELIMITER</full_name>
      <value>", "</value>
    </constant>
    <constant namespace="global" line="22" package="PGraph">
      <name>UNKNOWN_ERROR</name>
      <full_name>\UNKNOWN_ERROR</full_name>
      <value>"An unknown error has occured."</value>
    </constant>
    <constant namespace="global" line="25" package="PGraph">
      <name>STACK</name>
      <full_name>\STACK</full_name>
      <value>"SplStack"</value>
    </constant>
    <constant namespace="global" line="26" package="PGraph">
      <name>QUEUE</name>
      <full_name>\QUEUE</full_name>
      <value>"SplQueue"</value>
    </constant>
    <constant namespace="global" line="29" package="PGraph">
      <name>NO_VERTEX</name>
      <full_name>\NO_VERTEX</full_name>
      <value>1</value>
    </constant>
    <constant namespace="global" line="30" package="PGraph">
      <name>NO_EDGE</name>
      <full_name>\NO_EDGE</full_name>
      <value>2</value>
    </constant>
    <constant namespace="global" line="31" package="PGraph">
      <name>EDGE_EXISTS</name>
      <full_name>\EDGE_EXISTS</full_name>
      <value>3</value>
    </constant>
    <constant namespace="global" line="32" package="PGraph">
      <name>VERTEX_EXISTS</name>
      <full_name>\VERTEX_EXISTS</full_name>
      <value>4</value>
    </constant>
    <constant namespace="global" line="33" package="PGraph">
      <name>NO_PATH</name>
      <full_name>\NO_PATH</full_name>
      <value>5</value>
    </constant>
    <constant namespace="global" line="34" package="PGraph">
      <name>BAD_TYPE</name>
      <full_name>\BAD_TYPE</full_name>
      <value>6</value>
    </constant>
    <constant namespace="global" line="35" package="PGraph">
      <name>NEG_CYCLE</name>
      <full_name>\NEG_CYCLE</full_name>
      <value>7</value>
    </constant>
    <constant namespace="global" line="39" package="PGraph">
      <name>ARG_INDEX</name>
      <full_name>\ARG_INDEX</full_name>
      <value>"index"</value>
    </constant>
    <constant namespace="global" line="40" package="PGraph">
      <name>ARG_INDEX1</name>
      <full_name>\ARG_INDEX1</full_name>
      <value>"index1"</value>
    </constant>
    <constant namespace="global" line="41" package="PGraph">
      <name>ARG_INDEX2</name>
      <full_name>\ARG_INDEX2</full_name>
      <value>"index2"</value>
    </constant>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="PGraph" full_name="PGraph"/>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
